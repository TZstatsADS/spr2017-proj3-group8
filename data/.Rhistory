cum.temp
dim(cum.temp)
length(cum.temp)
splits
y
theta
m
K=5
folds <- sample(rep(1:K, each = n/K))
train<-function(X,w,y)
B<-10
folds <- sample(rep(1:K, each = n/K))
B<-10
source("http://bioconductor.org/biocLite.R")
biocLite()
getwd()
setwd("/Users/yuejin/Downloads")
img <- readImage("chicken.jpg")
library(EBImage)
library("EBImage")
biocLite("EBImage")
library("EBImage")
img <- readImage("chicken.jpg")
print(img)
S
library(ggplot2)
d <- ggplot(diamonds,
aes(x=carat, y=price))
d + geom_point()
d + geom_point(aes(colour = carat))
d + geom_point(aes(colour = carat))
+ scale_colour_brewer()
d <- ggplot(diamonds,
aes(x=carat, y=price)) +
geom_point() +
geom_point(aes(colour = carat)) +
geom_point(aes(colour = carat)) +
scale_colour_brewer()
d <- ggplot(diamonds,
aes(x=carat, y=price))
d
d+   geom_point(aes(colour = carat))
rm(d)
d <- ggplot(diamonds,
aes(x=carat, y=price))
d+ geom_point(aes(colour = carat))
d + geom_point()
d <- ggplot(diamonds)+
geom_point(mapping = aes(x=carat, y=price))
d <- ggplot(diamonds)+
geom_point(mapping = aes(x=carat, y=price))
d <- ggplot(diamonds)+
geom_point(mapping = aes(x=carat, y=price))
d
d <- ggplot(diamonds)+
geom_point(aes(x=carat, y=price))
d
d + geom_point(aes(colour = carat))
d <- ggplot(diamonds)+
geom_point(aes(x=carat, y=price))
d + geom_point(aes(colour = carat))
d <- ggplot(diamonds, aes(x=carat, y=price)+
geom_point()
# Represent it by points and also decorate it by color
d + geom_point(aes(colour = carat))
d <- ggplot(diamonds, aes(x=carat, y=price))+
geom_point()
d + geom_point(aes(colour = carat))
d + geom_point(aes(colour = carat))
dev.off()
d + geom_point(aes(colour = carat))
diamonds
d + geom_point(aes(colour = cut))
pred <- predict(lm(carat ~ price, data = diamonds))
d + geom_line(aes(y = pred))
pred
pred <- predict(lm(price ~ carat, data = diamonds))
d + geom_line(aes(y = pred))
d +
geom_point(aes(colour = carat)) +
geom_line(aes(y = pred))
d +
geom_point(aes(colour = carat)) +
geom_smooth()
d +
geom_point(aes(colour = carat)) +
geom_smooth(method="lm")
d +
geom_point(aes(colour = carat)) +
geom_smooth(method="gam")
d + ggtitle("Some Sleep Data")
d + ggtitle("Some plot")
d + facet_wrap(aes(colour = cut))
d + facet_wrap(~ cut)
names(diamonds)
head(diamonds)
d + facet_grid(color~ cut)
d + geom_lines()
d + geom_line()
d + geom_line(aes(y=price))
e <- ggplot(aex(clarity, price))
e <- ggplot(diamonds,aes(clarity, price))
e
e <- ggplot(diamonds)+
geom_line(aes(clarity, price))
e <- ggplot(diamonds)+
geom_line(aes(x=clarity, y=price))
e <- ggplot(diamonds)+
geom_line(mapping=aes(x=clarity, y=price))
e <- ggplot(diamonds)+
geom_line(mapping=aes(x=depth, y=price))
e
e <- ggplot(diamonds)+
geom_line(mapping=aes(x, y))
e
e <- ggplot(diamonds)+
geom_line(mapping=aes(depth, price))
e
e <- ggplot(diamonds)+
geom_line(mapping=aes(carat, depth))
e
e <- ggplot(diamonds)+
geom_line(mapping=aes(carat, depth))+
geom_smooth()
e
e <- ggplot(diamonds)+
geom_line(mapping=aes(x=carat, y=depth))+
geom_smooth()
e
e <- ggplot(data=diamonds)+
geom_line(mapping=aes(x=carat, y=depth))+
geom_smooth(aes(x=carat, y=depth))
w
e
e <- ggplot(data=diamonds, aes(x=carat, y=depth))+
geom_line(aes(color=carat))+
geom_smooth()
e
getwd()
setwd("/Users/yuejin/Dropbox/Courseworks/ADS/project3")
pred<-read.csv("gbm_predict.csv")
labels<-read.csv("/Users/yuejin/Dropbox/Courseworks/ADS/project3/spr2017-proj3-group8/data/labels.csv")
mean(pred!=labels)
pred<-unlist(pred)
labels<-read.csv("/Users/yuejin/Dropbox/Courseworks/ADS/project3/spr2017-proj3-group8/data/labels.csv",header=T)
pred<-unlist(pred)
labels<-unlist(labels)
mean(pred!=labels)
head(pred)
pred<-read.csv("gbm_predict.csv")
head(pred)
pred<-read.csv("gbm_predict.csv",header=T)
head(pred)
pred<-pred[,2]
head(pred)
mean(pred!=labels)
getwd()
setwd("/Users/yuejin/Dropbox/Courseworks/ADS/project3/spr2017-proj3-group8")
sift<-fread("output/hog_feature.csv", header = TRUE)
library(gbm)
library(data.table)
library(dplyr)
library(caret)
source("gbm2.R")
source("gbm.R")
source("../lib/gbm.R")
source("../lib/gbm.R")
getwd()
setwd("/Users/yuejin/Dropbox/courseworks/ADS/project3/spr2017-proj3-group8/data")
source("../lib/gbm.R")
sift<-fread("../output/hog_feature.csv", header = TRUE)
sift <- unlist(t(sift))
label <- read.table("../data/labels.csv",header=T)
label <- as.factor(unlist(label))
label_train<-label
dat_train<-sift
dim(data_train)
dim(dat_train)
dim(label)
length(label)
sift<-fread("../output/hog_feature.csv", header = TRUE)
dim(sift)
sift <- fread("../output/extracted.pca 0.3 ")
sift<-fread("../output/hog_feature.csv")
head(sift)
label <- read.table("../data/labels.csv",header=T)
label <- as.factor(unlist(label))
label_train<-label
dat_train<-sift
dim(dat_train)
fit_train_gbm<-gbm_train(dat_train, label_train)
typeof(sift)
sift<-as.numeric(unlist(sift))
typeof(sift)
fit_train_gbm<-gbm_train(dat_train, label_train)
sift<-fread("../output/sift_features/sift_features.csv")
dim(sift)
sift<-unlist(t(sift))
typeof(sift)
fit_train_gbm<-gbm_train(dat_train, label_train)
gbm.fit(x=dat_train, y=label,
n.trees=250,
distribution="bernoulli",
interaction.depth=1,
shrinkage=0.001,
bag.fraction = 0.5,
verbose=FALSE)
typeof(sift)
head(sift)
head(sift[1:4,1:5])
sift<-fread("../output/sift_features/sift_features.csv",header=T)
sift<-unlist(t(sift))
fit_train_gbm<-gbm_train(dat_train, label_train)
dim(sift)
sift<-fread("../output/sift_features/sift_features.csv",header=TRUE)
sift<-unlist(t(sift))
sift<-as.numeric(unlist(sift))
label <- read.table("../data/labels.csv",header=T)
label <- as.factor(unlist(label))
label_train<-label
dat_train<-sift
fit_train_gbm<-gbm_train(dat_train, label_train)
dim(sift)
sift<-fread("../output/sift_features/sift_features.csv",header=TRUE)
sift<-unlist(t(sift))
dim(sift)
label <- read.table("../data/labels.csv",header=T)
label <- as.factor(unlist(label))
label_train<-label
dat_train<-sift
fit_train_gbm<-gbm_train(dat_train, label_train)
fit_train_gbm<-gbm_train(dat_train, label_train)
library("gbm")
depth_values<-c(1,3,5)
err_cv<-array(dim=c(length(depth_values), 2))
K=5
for(k in 1:length(depth_values)){
err_cv[k,] <- gbm_cv(dat_train, label_train, K=K,depth=depth_values[k])
}
train.data<-dat_train
train.label<-label
depth<-1
fit_gbm <- gbm.fit(x=train.data, y=train.label,
n.trees=250,
distribution="adaboost",
interaction.depth=depth,
shrinkage=0.001,
bag.fraction = 0.5,
verbose=FALSE)
best_iter <- gbm.perf(fit_gbm, method="OOB", plot.it = FALSE)
best_iter
pred_gbm<-predict(fit_gbm,newdata=test.data,n.trees=best_iter,type="response")
pred<-as.numeric(pred_gbm>0.5)
fit_train_gbm<-gbm_train(dat_train, label_train)
source("../lib/gbm.R")
fit_train_gbm<-gbm_train(dat_train, label_train)
fit_train_gbm
fit_train_gbm<-gbm_train(dat_train, label_train)
K=5
for(k in 1:length(depth_values)){
err_cv[k,] <- gbm_cv(dat_train, label_train, K=K,depth=depth_values[k])
}
err_cv
label <- as.numeric(unlist(label))
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
label_train<-label
dat_train<-sift
gbm_cv(dat_train, label_train, K=K,depth=2)
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
setwd("spr2017-proj3-group8/data")
library(gbm)
library(data.table)
library(dplyr)
library(caret)
source("../lib/gbm.R")
sift <- fread("../output/extracted.pca 0.3 ")
sift<-fread("../output/hog_feature.csv")
sift<-unlist(t(sift))
sift<-unlist(t(sift))
dim(sift)
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
label_train<-label
dat_train<-sift
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
sift
sift<-read.table("../output/hog_feature.csv")
sift
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
dat_train<-sift
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
dim(sift)
sift<-read.table("../output/hog_feature.csv",header=T)
head(sift)
sift<-unlist((sift))
dim(sift)
sift<-read.csv("../output/hog_feature.csv",header=T,sep=",")
dim(sift)
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
label_train<-label
dat_train<-sift
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
tm_test <- system.time(pred_test <- gbm_test(fit_train_gbm, dat_test))
fit_train_gbm
source("../lib/gbm.R")
sift<-fread("../output/sift_features/sift_features.csv",header=TRUE)
sift<-read.csv("../output/hog_feature.csv",header=T,sep=",")
sift<-unlist(sift)
sift<-read.csv("../output/hog_feature.csv",header=T,sep=",")
sift<-unlist(sift)
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
label_train<-label
dat_train<-sift
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
dim(sift)
sift<-read.csv("../output/hog_feature.csv",header=T,sep=",")
dim(sift)
label_train<-label
dat_train<-sift
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
source("../lib/gbm.R")
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
sift<-read.csv("../output/hog_feature.csv",header=T,sep=",")
label_train<-label
dat_train<-sift
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
pred<-read.csv("../output/gbm_predict.csv",sep=",")
pred
pred<-read.csv("../output/gbm_predict.csv",sep=",",header=T)
dim(pred)
pred<-read.csv("../output/gbm_predict.csv",sep=",",header=T)[,2]
dim(pred)
mean(pred!=label)
fit_train_gbm
cv<-read.table("../output/err_train_gbm.RData")
cv<-load("../output/err_train_gbm.RData")
plot(cv)
cv
source("../lib/gbm.R")
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
sift<-read.csv("../output/hog_feature.csv",header=T,sep=",")
label_train<-label
dat_train<-sift
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
cv<-load("../output/err_cv.csv")
png("../fig/cv_results_gbm.png", width=7, height=5)
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4))
dim(err_cv)
err_cv
depth_values
depth_values<-c(1,3,5,7,9)
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4))
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4))
plot.new()
png("../figs/cv_results_gbm.png", width=7, height=5)
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4))
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4))
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4))
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlab=c(1:10))
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
png("../figs/cv_results_gbm.png", width=20, height=5)
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
png("../figs/cv_results_gbm.png", width=60, height=40)
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
plot(depth_values, err_cv[,1])
err_cv[,1]
plot(err_cv[,1])
fit_train_gbm
library(gbm)
library(data.table)
library(dplyr)
library(caret)
source("../lib/gbm.R")
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
sift<-read.csv("../output/hog_feature.csv",header=T,sep=",")
label_train<-label
dat_train<-sift
depth_values<-c(1,3,5,7,9)
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
cv<-load("../output/err_cv.RData")
plot.new()
png("../figs/cv_results_gbm.png", width=60, height=40)
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
dev.off()
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
cv
source("../lib/gbm.R")
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
sift<-read.csv("../output/hog_feature.csv",header=T,sep=",")
label_train<-label
dat_train<-sift
depth_values<-c(1,3,5,7,9)
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
cv<-load("../output/err_cv.txt")
cv
cv<-read.csv("../output/err_cv.csv")
err_cv[k,] <- gbm_cv(dat_train, label_train, K=K,depth=depth_values[k])
a<-c(0.2,0.3)
err_cv
err_cv<-matrix(nrow=length(depth_values), ncol=2)
err_cv<-matrix(NA,nrow=length(depth_values), ncol=2)
error
err_cv<-matrix(NA,nrow=length(depth_values), ncol=2)
err_cv[1,]<-a
err_cv
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
cv<-read.csv("../output/err_cv.csv")
cv
K=5
for(k in 1:length(depth_values)){
err_cv[k,] <- gbm_cv(dat_train, label_train, K=K,depth=depth_values[k])
}
err_cv
png("../figs/cv_results_gbm.png", width=60, height=40)
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
err_cv
err_cv[,1]
format(err_cv[,1],scientific=FALSE)
err_cv
a<-format(err_cv[,1],scientific=FALSE)
a
plot(depth_values, a, xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
plot(depth_values, a, xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.1),xlim=c(1:10))
a<-as.numeric(format(err_cv[,1],scientific=FALSE))
a
plot(a)
dev.off()
plot(a)
dev.off()
connection
close()
close(file)
err_cv
a<-as.numeric(format(err_cv[,1],scientific=FALSE))
a
a<-as.numeric(format(err_cv[,1],scientific=FALSE))
a
a
typeof(a)
plot(1:3)
save(err_cv, file="../output/err_cv_gbm_hog.csv")
a<-as.numeric(format(err_cv,scientific=FALSE))
a
save(a, file="../output/err_cv_gbm_hog.csv")
write.csv(a, file="../output/err_cv_gbm_hog.csv")
a<-format(err_cv,scientific=FALSE)
a
typeof(a)
a<-as.numeric(a)
a
a<-format(err_cv,scientific=FALSE)
a
a<-matrix(as.numeric(a),ncol=2)
a
a<-format(err_cv,scientific=FALSE)
a
write.csv(a, file="../output/err_cv_gbm_hog.csv")
library(gbm)
library(data.table)
library(dplyr)
library(caret)
source("../lib/gbm.R")
label <- read.table("../data/labels.csv",header=T)
label <- as.numeric(unlist(label))
sift<-fread("../output/sift_features/sift_features.csv",header=TRUE)
sift<-unlist(t(sift))
label_train<-label
dat_train<-sift
dim(sift)
dim(label_train)
length(label_train)
depth_values<-c(1,3,5,7,9)
fit_train_gbm<-gbm_train_cv(dat_train, label_train)
fit_train_gbm
cv<-read.csv("../output/err_cv_gbm_hog.csv")
plot.new()
png("../figs/cv_gob_hog", width=60, height=40)
plot(depth_values, err_cv[,1], xlab="Interaction Depth", ylab="CV Error",
main="Cross Validation Error",type="l",ylim=c(0,0.4),xlim=c(1:10))
cv
plot(cv)
as.numeric(cv)
as.numeric(cv$V1)
format(as.numeric(cv$V1),scientific=FALSE)
plot(format(as.numeric(cv$V1),scientific=FALSE))
pred<-read.csv("../output/gbm_predict.csv",sep=",",header=T)[,2]
error_rate<-mean(pred!=label)
error_rate
